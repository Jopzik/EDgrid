.ed-grid {
  $margin               : 1rem;
  display               : grid;
  grid-template-columns : 1fr;
  width                 : calc(100% - (#{$margin} * 2));
  margin-left           : $margin;
  margin-right          : $margin;
  max-width             : $max-width;

  @include from($max-width) {
    width        : 100%;
    margin-left  : auto;
    margin-right : auto;
  }

  .ed-grid,
  &.full {
    width        : 100%;
    max-width    : 100%;
    margin-right : 0;
    margin-left  : 0;
  }
}

// * ----- Grid core system ----- * //
@function create-grid() {
  $grid-map : ();
  @each $column in max-columns() {
    // Example : grid-template-columns : repeat(2, minmax(0, 1fr));
    $grid-map : map-merge($grid-map, (grid-#{$column} : (grid-template-columns : repeat($column, minmax(0, 1fr)))));
  }
  @return $grid-map;
}

@include create-class(create-grid());

// * ----- Column span ----- * //
@function column-row-span($class, $property) {
  $span : ();
  @each $column in max-columns() {
    // Example : grid-column-end : span 3;
    //         : grid-row-end    : span 2;
    $span : map-merge($span, (#{$class}-#{$column} : (grid-#{$property}-end : span $column)));
  }
  $column-extra : (
    #{$class}-full : (grid-#{$property} : unquote('1 / -1')),
    #{$class}-auto : (grid-#{$property} : auto),
  );
  $span : map-merge($span, $column-extra);
  @return $span;
}

@include create-class(column-row-span(cols, column));
@include create-class(column-row-span(rows, row));


// * ----- Row and column start ----- * //
$row-column-start : (
  x : grid-column-start,
  y : grid-row-start,
);

@include create-class(variants($row-column-start, max-columns()));
